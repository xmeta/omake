BUILTIN = $(dir $(ROOT)/src/builtin)

#
# Documentation files
#
MAN_BASE_FILES[] =
    $(BUILTIN)/omake_builtin_base.ml
    $(BUILTIN)/omake_builtin_arith.ml
    $(BUILTIN)/omake_builtin_fun.ml
    $(BUILTIN)/omake_builtin_object.ml
    $(BUILTIN)/omake_builtin_file.ml
    $(BUILTIN)/omake_builtin_test.ml

MAN_SYSTEM_FILES[] =
    $(BUILTIN)/omake_builtin_io.ml
    $(BUILTIN)/omake_builtin_io_fun.ml
    $(BUILTIN)/omake_builtin_sys.ml
    $(BUILTIN)/omake_builtin_shell.ml

MAN_PERVASIVES_FILES[] =
    $(LIB)/Pervasives.om

MAN_ROOT_FILES[] =
    $(BUILTIN)/omake_builtin_rule.ml
    $(LIB)/build/Common.om
    $(LIB)/build/C.om
    $(LIB)/build/OCaml.om
    $(LIB)/build/LaTeX.om
    $(BUILTIN)/omake_builtin_target.ml

MAN_BASE_FILES       = $(file $(MAN_BASE_FILES))
MAN_SYSTEM_FILES     = $(file $(MAN_SYSTEM_FILES))
MAN_PERVASIVES_FILES = $(file $(MAN_PERVASIVES_FILES))
MAN_ROOT_FILES       = $(file $(MAN_ROOT_FILES))
MAN_ALL_FILES[] =
    $(MAN_BASE_FILES)
    $(MAN_SYSTEM_FILES)
    $(MAN_PERVASIVES_FILES)
    $(MAN_ROOT_FILES)

########################################################################
# Documentation
#
Shell. +=
   #
   # Extract the text between the following delimiters.
   #
   # \begin{doc}
   # ...
   # \end{doc}
   #
   extract-doc-text(argv) =
      print = false

      awk($(argv))
      case $'\\end\{doc\}'
         print = false
         export
      default
         if $(print)
            println($0)
      case $'\\begin\{doc\}'
         print = true
         export

   remove-leading-comment-text(argv) =
      fsubst($(argv))
      case $'^[ \t]*[*#] ?'
         value

   extract-docs(argv) =
      extract-doc-text $(argv) | remove-leading-comment-text

#
# Extract the documentation from the src files.
#
ExtractManDocument(dst, files) =
    tex/$(dst).tex: $(files)
        extract-docs $(files) > $@

ExtractManDocument(omake-base,       $(MAN_BASE_FILES))
ExtractManDocument(omake-system,     $(MAN_SYSTEM_FILES))
ExtractManDocument(omake-pervasives, $(MAN_PERVASIVES_FILES))
ExtractManDocument(omake-root,       $(MAN_ROOT_FILES))

#
# Generating the TeX files.
#
TEX_FILES[] =
    src/omake-doc
    src/omake-index
    src/omake-examples
    src/omake-build-examples
    src/omake-language-examples
    src/omake-options
    src/omake-language
    src/omake-detail
    src/omake-rules
    tex/omake-base
    tex/omake-system
    tex/omake-pervasives
    tex/omake-root
    src/osh
    src/omake-grammar

TEX_FILES = $(file $(addsuffixes .tex, $(TEX_FILES)))

#
# HTML files
#
HEVEA = hevea
HACHA = hacha
HEVEA_OK = false
static. =
    HEVEA_OK = $(and $(CheckProg $(HEVEA)), $(CheckProg $(HACHA)))

HEVEA_OPTIONS = -I $(dir src) -I $(dir tex)
HACHA_OPTIONS = -tocter

if $(HEVEA_OK)
    .SUBDIRS: html
        omake-doc.html: $(TEX_FILES)
            $(HEVEA) $(HEVEA_OPTIONS) omake-doc
            $(HEVEA) $(HEVEA_OPTIONS) omake-doc

        omake-toc.html: omake-doc.html
            $(HACHA) $(HACHA_OPTIONS) -o $@ $<

    .SUBDIRS: txt
        omake-doc.txt: $(TEX_FILES)
            $(HEVEA) $(HEVEA_OPTIONS) -text omake-doc
            $(HEVEA) $(HEVEA_OPTIONS) -text omake-doc

    .SUBDIRS: info
        omake-doc.info: $(TEX_FILES)
            $(HEVEA) $(HEVEA_OPTIONS) -info omake-doc
            $(HEVEA) $(HEVEA_OPTIONS) -info omake-doc

    .SUBDIRS: ps
        TEXINPUTS[] += ../src ../tex

        omake-doc.tex: ../src/omake-doc.tex
            $(symlink $<, $@)

        TEXDEPS[] += $(TEX_FILES)

        LaTeXDocument(omake-doc, omake-doc)

#
# Install man pages too
#
html: html/omake-doc.html html/omake-toc.html
tex: ps/omake-doc.ps ps/omake-doc.pdf
txt: txt/omake-doc.txt
info: info/omake-doc.info

clean:
    $(CLEAN) ps/*.aux ps/*.fls ps/*.log ps/*.tex ps/*.out tex/*.tex
